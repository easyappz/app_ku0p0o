openapi: 3.0.0
info:
  title: Photo Rating API
  version: 1.0.0
description: API for a photo rating application with user authentication and photo management.

paths:
  /api/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: integer
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      username:
                        type: string
                      gender:
                        type: string
                      age:
                        type: integer
                      points:
                        type: integer
        '400':
          description: Email already registered
        '500':
          description: Registration failed

  /api/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      username:
                        type: string
                      gender:
                        type: string
                      age:
                        type: integer
                      points:
                        type: integer
        '400':
          description: Invalid email or password
        '500':
          description: Login failed

  /api/request-password-reset:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  resetToken:
                    type: string
        '404':
          description: User not found
        '500':
          description: Password reset request failed

  /api/reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid or expired token
        '500':
          description: Password reset failed

  /api/photos/upload:
    post:
      summary: Upload a photo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageData:
                  type: string
                  description: Base64 encoded image data
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: integer
      responses:
        '201':
          description: Photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  photoId:
                    type: string
        '400':
          description: Image size exceeds 1MB limit
        '401':
          description: Authentication token missing
        '403':
          description: Invalid token
        '500':
          description: Photo upload failed

  /api/photos/rate:
    post:
      summary: Rate a photo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                score:
                  type: integer
                  minimum: 1
                  maximum: 10
      responses:
        '200':
          description: Rating added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  averageScore:
                    type: number
        '400':
          description: You have already rated this photo or cannot rate your own photo
        '401':
          description: Authentication token missing
        '403':
          description: Invalid token
        '404':
          description: Photo not found
        '500':
          description: Rating failed

  /api/photos:
    get:
      summary: Get photos with optional filters
      parameters:
        - in: query
          name: gender
          schema:
            type: string
            enum: [male, female, other]
          description: Filter by gender
        - in: query
          name: minAge
          schema:
            type: integer
          description: Minimum age filter
        - in: query
          name: maxAge
          schema:
            type: integer
          description: Maximum age filter
      responses:
        '200':
          description: List of photos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    userId:
                      type: string
                    username:
                      type: string
                    imageData:
                      type: string
                    gender:
                      type: string
                    age:
                      type: integer
                    averageScore:
                      type: number
                    uploadDate:
                      type: string
                      format: date-time
                    isActive:
                      type: boolean
        '500':
          description: Failed to fetch photos

  /api/photos/next:
    get:
      summary: Get next photo for rating with filters
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: gender
          schema:
            type: string
            enum: [male, female, other]
          description: Filter by gender
        - in: query
          name: minAge
          schema:
            type: integer
          description: Minimum age filter
        - in: query
          name: maxAge
          schema:
            type: integer
          description: Maximum age filter
      responses:
        '200':
          description: Next photo for rating
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  userId:
                    type: string
                  username:
                    type: string
                  imageData:
                    type: string
                  gender:
                    type: string
                  age:
                    type: integer
                  averageScore:
                    type: number
                  uploadDate:
                    type: string
                    format: date-time
        '404':
          description: No photos available for rating with the specified filters
        '401':
          description: Authentication token missing
        '403':
          description: Invalid token
        '500':
          description: Failed to fetch next photo

  /api/photos/status:
    post:
      summary: Toggle photo active status for rating
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                isActive:
                  type: boolean
      responses:
        '200':
          description: Photo status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  photoId:
                    type: string
        '400':
          description: Not enough points to activate photo
        '401':
          description: Authentication token missing
        '403':
          description: Invalid token or not authorized to modify photo
        '404':
          description: Photo not found
        '500':
          description: Failed to update photo status

  /api/stats:
    get:
      summary: Get user rating statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalPhotos:
                    type: integer
                  totalRatings:
                    type: integer
                  averageScore:
                    type: number
        '401':
          description: Authentication token missing
        '403':
          description: Invalid token
        '500':
          description: Failed to fetch stats

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
